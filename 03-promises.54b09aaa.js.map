{"version":3,"sources":["js/03-promises.js"],"names":["refs","createButton","document","querySelector","firstDelay","delay","amount","addEventListener","onHandleClick","e","preventDefault","position","value","setTimeout","createPromise","then","console","log","catch","finally","shouldResolve","Math","random","Promise","resolve","reject"],"mappings":";AAEA,MAAMA,EAAO,CACXC,aAAcC,SAASC,cAAc,UACrCC,WAAYF,SAASC,cAAc,uBACnCE,MAAOH,SAASC,cAAc,sBAC9BG,OAAQJ,SAASC,cAAc,yBAGjCH,EAAKC,aAAaM,iBAAiB,QAASC,GAE5C,MAAMH,EAAQ,KACd,SAASG,EAAcC,EAAGJ,EAAOD,EAAYE,GAC3CG,EAAEC,iBAEG,IAAA,IAAIC,EAAW,EAAGA,GAAYX,EAAKM,OAAOM,MAAOD,IACpDE,WAAW,KACTC,EAAcH,EAAUN,GACrBU,KAAK,CAACJ,EAAUN,KACfW,QAAQC,2BAA2BN,QAAeN,SAEnDa,MAAM,CAACP,EAAUN,KAChBW,QAAQC,0BAA0BN,QAAeN,SAElDc,QAAQ,CAACR,EAAUN,KACN,KAGfL,EAAKK,MAAMO,OAGlB,SAASE,EAAcH,EAAUN,GACzBe,MAAAA,EAAgBC,KAAKC,SAAW,GAC/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAC3BZ,WAAW,KACLO,EAGFI,KAAWb,KAIXc,KAAUd,MAEXX,EAAKI,WAAWQ","file":"03-promises.54b09aaa.js","sourceRoot":"../src","sourcesContent":["// import { Loading } from 'notiflix';\n\nconst refs = {\n  createButton: document.querySelector('button'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.createButton.addEventListener('click', onHandleClick);\n\nconst delay = 1500;\nfunction onHandleClick(e, delay, firstDelay, amount) {\n  e.preventDefault();\n  let position;\n  for (let position = 1; position <= refs.amount.value; position++) {\n    setTimeout(() => {\n      createPromise(position, delay)\n        .then((position, delay) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch((position, delay) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n        .finally((position, delay) => {\n          position += 1;\n          // delay = delay + 1000;\n        });\n    }, refs.delay.value);\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n\n        resolve(`${position}`);\n      } else {\n        // Reject\n\n        reject(`${position}`);\n      }\n    }, refs.firstDelay.value);\n  });\n}\n"]}