{"version":3,"sources":["js/03-promises.js"],"names":["refs","createButton","document","querySelector","firstDelay","delay","amount","addEventListener","onHandleClick","step","value","e","preventDefault","setTimeout","createPromise","then","position","console","log","catch","i","shouldResolve","Math","random","Promise","resolve","reject"],"mappings":";AAEA,MAAMA,EAAO,CACXC,aAAcC,SAASC,cAAc,UACrCC,WAAYF,SAASC,cAAc,uBACnCE,MAAOH,SAASC,cAAc,sBAC9BG,OAAQJ,SAASC,cAAc,yBAGjCH,EAAKC,aAAaM,iBAAiB,QAASC,GAE5C,IAAIH,EAAQL,EAAKS,KAAKC,MAClBJ,EAASN,EAAKM,OAAOI,MACrBN,EAAaJ,EAAKK,MAAMK,MAC5B,SAASF,EAAcG,EAAGN,EAAOD,EAAYE,GAC3CK,EAAEC,iBAEFC,WAAWC,IAAiBV,GACzBW,KAAK,CAACC,EAAUX,KACfY,QAAQC,2BAA2BF,QAAeX,SAEnDc,MAAM,CAACH,EAAUX,KAChBY,QAAQC,0BAA0BF,QAAeX,SAGhD,IAAA,IAAIW,EAAW,EAAGI,GAAKd,EAAQc,IAAK,CACnCf,IAAAA,EACJS,EAAcE,EAAUX,GACrBU,KAAK,CAACC,EAAUX,KACfY,QAAQC,2BAA2BF,QAAeX,SAEnDc,MAAM,CAACH,EAAUX,KAChBY,QAAQC,0BAA0BF,QAAeX,UAIzD,SAASS,EAAcE,EAAUX,GACzBgB,MAAAA,EAAgBC,KAAKC,SAAW,GAC/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAC3Bb,WAAW,KACLQ,EAEFI,EAAQ,QAGRC,EAAO","file":"03-promises.3c88fc5e.js","sourceRoot":"../src","sourcesContent":["// import { Loading } from 'notiflix';\n\nconst refs = {\n  createButton: document.querySelector('button'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.createButton.addEventListener('click', onHandleClick);\n\nlet delay = refs.step.value;\nlet amount = refs.amount.value;\nlet firstDelay = refs.delay.value;\nfunction onHandleClick(e, delay, firstDelay, amount) {\n  e.preventDefault();\n\n  setTimeout(createPromise(), firstDelay)\n    .then((position, delay) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch((position, delay) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n  for (let position = 1; i <= amount; i++) {\n    let delay = \n    createPromise(position, delay)\n      .then((position, delay) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch((position, delay) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve('done');\n      } else {\n        // Reject\n        reject('not');\n      }\n    });\n  });\n}\n"]}